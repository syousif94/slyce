{"version":3,"sources":["lib/useSubject.tsx","lib/SelectedImage.tsx","lib/PreviewModes.tsx","components/ActionBarView.tsx","lib/CropSettings.tsx","components/Control.tsx","components/PanoBack.tsx","components/PlusMinusControl.tsx","components/TrimEdgeInput.tsx","components/TrimControl.tsx","components/PanoExpand.tsx","lib/ImageManipulator.tsx","components/SliceBar.tsx","lib/SliceImage.tsx","components/InfoBar.tsx","components/CropBox.tsx","components/ImagePreviewDots.tsx","components/ImagePreview.tsx","components/SliceProgress.web.tsx","components/ImageEditor.tsx","lib/Addresses.tsx","lib/PanoAlbum.tsx","components/PanoItem.tsx","components/EmptyPanoView.tsx","components/PanoList.tsx","components/HomeScreen.tsx","components/Updater.web.tsx","App.tsx","assets/splash.png"],"names":["useSubject","subject","useState","value","state","setState","useEffect","sub","subscribe","val","unsubscribe","selectedImage$","BehaviorSubject","getLibraryPermissions","a","async","Platform","OS","Permissions","status","Error","openPicker","ImagePicker","mediaTypes","Images","result","cancelled","next","console","log","PreviewMode","ActionBarView","children","style","insets","useSafeAreaInsets","View","position","maxWidth","alignSelf","bottom","width","top","paddingBottom","justifyContent","pointerEvents","previewMode$","Full","numberOfSlices$","topOffset$","bottomOffset$","leftOffset$","rightOffset$","resetCropSettings","getRatio","selectedImage","numberOfSlices","topOffset","bottomOffset","leftOffset","rightOffset","height","incrementSlices","currentValue","decrementSlices","CONTROL_BG","Control","touchableStyle","onPress","disabled","TouchableOpacity","backgroundColor","borderRadius","PanoBack","navigation","useNavigation","flexDirection","alignItems","paddingVertical","paddingLeft","paddingRight","goBack","Feather","name","size","color","PlusMinusControlTouchableStyle","paddingHorizontal","PlusMinusControl","disableDecrement","disableIncrement","onIncrement","onDecrement","MaterialCommunityIcons","Text","fontSize","fontWeight","Edge","EdgeInput","props","edge","firstIcon","secondIcon","Top","Bottom","onArrowButton","addBy","offset$","newVal","leftArrowValue","rightArrowValue","leftDisabled","rightDisabled","Right","ArrowButton","EdgeTextInput","onChange","selected","setSelected","inputRef","useRef","textColor","TextInput","contextMenuHidden","selectTextOnFocus","returnKeyType","keyboardType","ref","underlineColorAndroid","StyleSheet","absoluteFillObject","onFocus","onBlur","TrimControl","offsetArr","e","Number","nativeEvent","text","KeyboardAvoidingView","behavior","enabled","Left","PanoExpand","previewMode","inSlices","Slices","MaterialIcons","resampleSingle","canvas","resizeCanvas","widthSource","heightSource","wRatio","Math","round","hRatio","wRatioHalf","ceil","hRatioHalf","ctx","getContext","img","getImageData","img2","createImageData","data","data2","j","i","x2","weight","weights","weightsAlpha","gx_r","gx_g","gx_b","gx_a","yCenter","yy_start","floor","yy_stop","yy","dy","abs","center_x","w0","xx_start","xx_stop","xx","dx","w","sqrt","xPosition","clearRect","putImageData","sizeFromAngle","angle","radians","PI","c","cos","s","sin","cropImage","image","x","y","context","save","drawImage","xFlip","yFlip","naturalWidth","naturalHeight","translate","rotate","xScale","yScale","scale","restore","getResults","options","base64","format","undefined","compress","warn","quality","min","max","toDataURL","uri","loadImageAsync","Promise","resolve","reject","imageSource","Image","onload","onerror","src","manipulateWithActionAsync","action","document","createElement","crop","originX","originY","clamp","resize","imageRatio","requestedWidth","requestedHeight","flip","FlipType","Horizontal","Vertical","SaveFormat","manipulateAsync","actions","length","_options","output","EditorState","ImageSlices","slices","left","right","images","assets","this","slyce$","SliceBar","Slice","editorState","setEditorState","Trim","onToggle","controlStyle","borderTopRightRadius","borderBottomRightRadius","marginRight","borderTopLeftRadius","borderBottomLeftRadius","NextButton","ratio","invalidRatio","marginBottom","ToggleControlStyle","slyce","sliceCount","topMargin","bottomMargin","adjustedHeight","leftMargin","rightMargin","adjustedWidth","sliceWidth","isWeb","ImageCanvas","ImageManipulator","JPEG","push","MediaLibrary","asset","Alert","alert","message","sliceImage","marginLeft","SlicesManipulator","NavBar","SliceToggle","transform","translateY","TrimToggle","InfoBar","window","useWindowDimensions","toFixed","marginTop","marginHorizontal","textAlign","CropBox","barCount","bars","key","widthRatio","correctedLeft","correctedRight","imageHeight","correctedTop","correctedBottom","paddingTop","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderColor","borderWidth","borderTopColor","getBarColor","borderLeftColor","borderRightColor","borderBottomColor","offset","VISIBLE_BAR_COLOR","HIDDEN_BAR_COLOR","ImagePreviewDots","dots","DotView","index","translateX","current","interpolate","inputRange","outputRange","extrapolate","overflow","Animated","flex","ImagePreview","id","scrollOffsetRef","Value","leftPercent","percentWidth","topPercent","percentHeight","croppedImageWidth","croppedImageHeight","segmentWidth","scaledSegmentRatio","scaledHeight","scaledWidth","scaledImageWidth","scaledImageHeight","ScrollView","showsHorizontalScrollIndicator","scrollEventThrottle","onScroll","event","contentOffset","useNativeDriver","horizontal","pagingEnabled","SharedElement","source","SliceProgress","setImages","lineHeight","centerContent","map","setTimeout","dataurl","filename","href","setAttribute","click","parentElement","removeChild","downloadImage","cursor","DismissControl","ImageEditor","route","params","ImageView","Component","ImagePanView","bouncesZoom","maximumZoomScale","minimumZoomScale","alwaysBounceVertical","alwaysBounceHorizontal","contentContainerStyle","minHeight","getAddress","coordinates","coords","latitude","longitude","AsyncStorage","getItem","Location","find","placemark","city","country","setItem","dayjs","extend","relativeTime","album$","assetCache","Map","formatTime","epoch","time","date","from","fromNow","loadPhotos","total","after","album","sortBy","modificationTime","first","filterPanos","filter","mediaSubtypes","includes","loadAllAssets","panos","albums","title","currentRequest","concat","hasNextPage","endCursor","PanoItem","item","getHeight","info","get","updatedAt","createdAt","creationTime","then","location","address","set","getAssetInfo","setAddress","useAssetInfoAddress","selectImage","navigate","infoHeight","numberOfLines","EmptyPanoView","PanoShimmer","ShimmerPlaceholder","shimmerColors","PanoList","catch","err","stack","FlatList","ListEmptyComponent","ListHeaderComponent","contentInsetAdjustmentBehavior","renderItem","HomeScreen","WebHeader","require","resizeMode","zIndex","navigator","platform","WebFooter","padding","Linking","Updater","enableScreens","Stack","createSharedElementStackNavigator","Modal","MainStack","Navigator","headerMode","Screen","component","sharedElements","otherRoute","showing","App","styles","container","NavigationContainer","mode","StatusBar","create","module","exports"],"mappings":"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","file":"static/js/app.4eda03b8.chunk.js","sourcesContent":["import { BehaviorSubject } from 'rxjs';\nimport { useState, useEffect } from 'react';\n\nexport function useSubject<T>(subject: BehaviorSubject<T>): T {\n  const [state, setState] = useState(subject.value);\n\n  useEffect(() => {\n    const sub = subject.subscribe((val) => {\n      setState(val);\n    });\n\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [subject]);\n\n  return state;\n}\n","import { BehaviorSubject } from 'rxjs';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport { Platform } from 'react-native';\n\nexport interface IImageSource {\n  height: number;\n  width: number;\n  uri: string;\n}\n\ntype ImageAsset = IImageSource | null;\n\nexport const selectedImage$ = new BehaviorSubject<ImageAsset>(null);\n\nexport async function getLibraryPermissions() {\n  if (Platform.OS !== 'web') {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n    if (status !== 'granted') {\n      throw new Error('Permission Required');\n    }\n  }\n}\n\nexport async function selectImage(asset: ImageAsset) {\n  selectedImage$.next(asset);\n}\n\nexport async function openPicker() {\n  try {\n    await getLibraryPermissions();\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n    });\n\n    if (!result.cancelled) {\n      selectedImage$.next(result);\n    } else {\n      selectedImage$.next(null);\n    }\n  } catch (E) {\n    console.log(E);\n  }\n}\n","import { Platform } from 'react-native';\nimport { BehaviorSubject } from 'rxjs';\n\nexport enum PreviewMode {\n  Full,\n  Slices,\n}\n\nexport const previewMode$ = new BehaviorSubject(PreviewMode.Full);\n","import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nexport default function ActionBarView({\n  children,\n  style,\n}: {\n  children?: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  const insets = useSafeAreaInsets();\n  return (\n    <View\n      style={[\n        {\n          position: 'absolute',\n          maxWidth: 400,\n          alignSelf: 'center',\n          bottom: 0,\n          width: '100%',\n          top: 0,\n          paddingBottom: insets.bottom,\n          justifyContent: 'flex-end',\n        },\n        style,\n      ]}\n      pointerEvents=\"box-none\"\n    >\n      {children}\n    </View>\n  );\n}\n","import { BehaviorSubject } from 'rxjs';\nimport { IImageSource } from './SelectedImage';\nimport { Alert, Platform } from 'react-native';\nimport { PreviewMode, previewMode$ } from './PreviewModes';\n\nexport const numberOfSlices$ = new BehaviorSubject(2);\nexport const topOffset$ = new BehaviorSubject(0);\nexport const bottomOffset$ = new BehaviorSubject(0);\nexport const leftOffset$ = new BehaviorSubject(0);\nexport const rightOffset$ = new BehaviorSubject(0);\n\nexport function resetCropSettings() {\n  numberOfSlices$.next(2);\n  topOffset$.next(0);\n  bottomOffset$.next(0);\n  leftOffset$.next(0);\n  rightOffset$.next(0);\n  previewMode$.next(PreviewMode.Full);\n}\n\nexport function getRatio(\n  selectedImage: IImageSource,\n  numberOfSlices: number,\n  topOffset: number,\n  bottomOffset: number,\n  leftOffset: number,\n  rightOffset: number\n) {\n  const sliceWidth =\n    (selectedImage.width -\n      ((leftOffset + rightOffset) / 100) * selectedImage.width) /\n    numberOfSlices;\n\n  return (\n    sliceWidth /\n    (selectedImage.height -\n      ((topOffset + bottomOffset) / 100) * selectedImage.height)\n  );\n}\n\nexport function incrementSlices() {\n  const currentValue = numberOfSlices$.value;\n\n  numberOfSlices$.next(currentValue + 1);\n}\n\nexport function decrementSlices() {\n  const currentValue = numberOfSlices$.value;\n  if (currentValue <= 2) {\n    return;\n  }\n\n  numberOfSlices$.next(currentValue - 1);\n}\n","import React, { ReactNode } from 'react';\nimport {\n  GestureResponderEvent,\n  TouchableOpacity,\n  ViewStyle,\n} from 'react-native';\n\nexport interface IControlProps {\n  touchableStyle?: ViewStyle;\n  onPress?: (event: GestureResponderEvent) => void;\n  children?: ReactNode;\n  disabled?: boolean;\n}\n\nexport const CONTROL_BG = 'rgba(48,48,48,0.45)';\nexport const CONTROL_SELECTED_BG = 'rgba(130,130,130,0.45)';\nexport const CONTROL_DISABLED_FILL = 'rgba(140,140,140,0.8)';\n\nexport default function Control({\n  touchableStyle,\n  onPress,\n  children,\n  disabled,\n}: IControlProps) {\n  return (\n    <TouchableOpacity\n      style={[\n        {\n          backgroundColor: CONTROL_BG,\n          borderRadius: 10,\n        },\n        touchableStyle,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n}\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { Feather } from '@expo/vector-icons';\nimport { CONTROL_BG } from './Control';\n\nexport default function PanoBack() {\n  const navigation = useNavigation();\n  return (\n    <TouchableOpacity\n      style={{\n        backgroundColor: CONTROL_BG,\n        borderRadius: 10,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingVertical: 5,\n        paddingLeft: 9,\n        paddingRight: 11,\n      }}\n      onPress={() => {\n        navigation.goBack();\n      }}\n    >\n      <Feather name=\"chevron-left\" size={28} color=\"#fff\" />\n    </TouchableOpacity>\n  );\n}\n","import React from 'react';\nimport { ViewStyle, View, Text } from 'react-native';\nimport Control from './Control';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { CONTROL_DISABLED_FILL } from './Control';\n\nconst PlusMinusControlTouchableStyle: ViewStyle = {\n  flexDirection: 'row',\n  alignItems: 'center',\n  paddingVertical: 8,\n  paddingHorizontal: 12,\n};\n\ninterface IPlusMinusControlProps {\n  currentValue: number;\n  disableDecrement?: boolean;\n  disableIncrement?: boolean;\n  onIncrement: () => void;\n  onDecrement: () => void;\n}\n\nexport default function PlusMinusControl({\n  currentValue,\n  disableDecrement,\n  disableIncrement,\n  onIncrement,\n  onDecrement,\n}: IPlusMinusControlProps) {\n  return (\n    <View\n      style={{\n        alignItems: 'center',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n      pointerEvents=\"box-none\"\n    >\n      {/* subtract button */}\n      <Control\n        onPress={onDecrement}\n        disabled={disableDecrement}\n        touchableStyle={PlusMinusControlTouchableStyle}\n      >\n        <MaterialCommunityIcons\n          name=\"minus\"\n          size={28}\n          color={disableDecrement ? CONTROL_DISABLED_FILL : '#fff'}\n        />\n      </Control>\n      {/* text */}\n      <View style={{ width: 140, alignItems: 'center' }}>\n        <Text style={{ fontSize: 30, fontWeight: '700', color: '#fff' }}>\n          {currentValue}\n        </Text>\n      </View>\n      {/* add button */}\n      <Control\n        onPress={onIncrement}\n        disabled={disableIncrement}\n        touchableStyle={PlusMinusControlTouchableStyle}\n      >\n        <MaterialCommunityIcons name=\"plus\" size={28} color=\"#fff\" />\n      </Control>\n    </View>\n  );\n}\n","import React, { ReactNode, useRef, useState } from 'react';\nimport {\n  View,\n  Text,\n  NativeSyntheticEvent,\n  TextInputChangeEventData,\n  StyleSheet,\n  TextInput,\n  FlexStyle,\n  TouchableOpacity,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  topOffset$,\n  bottomOffset$,\n  leftOffset$,\n  rightOffset$,\n} from '../lib/CropSettings';\nimport { CONTROL_BG, CONTROL_DISABLED_FILL } from './Control';\n\nexport enum Edge {\n  Top,\n  Bottom,\n  Left,\n  Right,\n}\n\nexport interface IEdgeInputProps {\n  value: number;\n  edge: Edge;\n  onChange: (\n    edge: Edge\n  ) => (e: NativeSyntheticEvent<TextInputChangeEventData>) => void;\n}\n\nexport default function EdgeInput(props: IEdgeInputProps) {\n  const { edge } = props;\n\n  let firstIcon = 'chevron-left';\n  let secondIcon = 'chevron-right';\n\n  switch (edge) {\n    case Edge.Top:\n      firstIcon = 'chevron-up';\n      secondIcon = 'chevron-down';\n      break;\n    case Edge.Bottom:\n      firstIcon = 'chevron-down';\n      secondIcon = 'chevron-up';\n      break;\n    default:\n      break;\n  }\n\n  const flexDirection: FlexStyle['flexDirection'] = 'row';\n\n  const onArrowButton = (addBy: number) => () => {\n    const offset$ = [topOffset$, bottomOffset$, leftOffset$, rightOffset$][\n      edge\n    ];\n\n    const newVal = offset$.value + addBy;\n\n    if (newVal >= 0 && newVal <= 99) {\n      offset$.next(newVal);\n    }\n  };\n\n  let leftArrowValue = -1;\n  let rightArrowValue = 1;\n  let leftDisabled = props.value <= 0;\n  let rightDisabled = props.value >= 99;\n  if (edge === Edge.Right) {\n    leftArrowValue = 1;\n    rightArrowValue = -1;\n    leftDisabled = props.value >= 99;\n    rightDisabled = props.value <= 0;\n  }\n\n  return (\n    <View\n      style={{\n        flexDirection,\n        alignItems: 'center',\n      }}\n    >\n      <ArrowButton\n        onPress={onArrowButton(leftArrowValue)}\n        disabled={leftDisabled}\n      >\n        <MaterialCommunityIcons\n          name={firstIcon}\n          size={28}\n          color={\n            leftDisabled ? CONTROL_DISABLED_FILL : 'rgba(255, 27, 150, 0.8)'\n          }\n        />\n      </ArrowButton>\n\n      <EdgeTextInput {...props} />\n      <ArrowButton\n        onPress={onArrowButton(rightArrowValue)}\n        disabled={rightDisabled}\n      >\n        <MaterialCommunityIcons\n          name={secondIcon}\n          size={28}\n          color={\n            rightDisabled ? CONTROL_DISABLED_FILL : 'rgba(255, 27, 150, 0.8)'\n          }\n        />\n      </ArrowButton>\n    </View>\n  );\n}\n\ninterface IArrowButtonProps {\n  children: ReactNode;\n  onPress: () => void;\n  disabled?: boolean;\n}\n\nfunction ArrowButton({ children, onPress, disabled }: IArrowButtonProps) {\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      onPress={onPress}\n      style={{\n        paddingHorizontal: 8,\n      }}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n}\n\nfunction EdgeTextInput({ value, onChange, edge }: IEdgeInputProps) {\n  const [selected, setSelected] = useState(false);\n  const inputRef = useRef<TextInput>(null);\n\n  const textColor = getTextColor(value);\n  return (\n    <View\n      style={{\n        backgroundColor: selected ? 'rgba(255,255,255,0.25)' : CONTROL_BG,\n        borderRadius: 5,\n      }}\n    >\n      <TextInput\n        contextMenuHidden\n        selectTextOnFocus\n        returnKeyType=\"done\"\n        keyboardType=\"decimal-pad\"\n        ref={inputRef}\n        underlineColorAndroid=\"transparent\"\n        style={{\n          ...StyleSheet.absoluteFillObject,\n          fontSize: 14,\n          color: textColor,\n          fontWeight: '700',\n          paddingLeft: 10,\n        }}\n        value={`${value}`}\n        onFocus={() => {\n          setSelected(true);\n        }}\n        onBlur={() => {\n          setSelected(false);\n        }}\n        onChange={onChange(edge)}\n      />\n      <View\n        style={{\n          height: 32,\n          paddingHorizontal: 10,\n          justifyContent: 'center',\n        }}\n        pointerEvents=\"none\"\n      >\n        <Text style={{ color: 'transparent', fontSize: 14, fontWeight: '700' }}>\n          {value}\n          <Text style={{ color: textColor }}>{'%'}</Text>\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nfunction getTextColor(offset: number) {\n  return offset > 0 ? 'yellow' : '#fff';\n}\n","import React from 'react';\nimport {\n  View,\n  NativeSyntheticEvent,\n  TextInputChangeEventData,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport { useSubject } from '../lib/useSubject';\nimport {\n  topOffset$,\n  bottomOffset$,\n  leftOffset$,\n  rightOffset$,\n} from '../lib/CropSettings';\nimport EdgeInput, { Edge } from './TrimEdgeInput';\n\nexport default function TrimControl() {\n  const topOffset = useSubject(topOffset$);\n  const bottomOffset = useSubject(bottomOffset$);\n  const leftOffset = useSubject(leftOffset$);\n  const rightOffset = useSubject(rightOffset$);\n\n  const offsetArr = [topOffset, bottomOffset, leftOffset, rightOffset];\n\n  const onChange = (edge: Edge) => (\n    e: NativeSyntheticEvent<TextInputChangeEventData>\n  ) => {\n    const offset$ = [topOffset$, bottomOffset$, leftOffset$, rightOffset$][\n      edge\n    ];\n\n    offset$.next(Number(e.nativeEvent.text));\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior=\"padding\"\n      pointerEvents=\"box-none\"\n      enabled={Platform.OS === 'ios'}\n    >\n      <View\n        style={{\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingBottom: 35,\n        }}\n        pointerEvents=\"box-none\"\n      >\n        <EdgeInput\n          value={offsetArr[Edge.Top]}\n          edge={Edge.Top}\n          onChange={onChange}\n        />\n\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            width: '100%',\n            paddingHorizontal: '2%',\n          }}\n          pointerEvents=\"box-none\"\n        >\n          <EdgeInput\n            value={offsetArr[Edge.Left]}\n            edge={Edge.Left}\n            onChange={onChange}\n          />\n          <EdgeInput\n            value={offsetArr[Edge.Right]}\n            edge={Edge.Right}\n            onChange={onChange}\n          />\n        </View>\n        <EdgeInput\n          value={offsetArr[Edge.Bottom]}\n          edge={Edge.Bottom}\n          onChange={onChange}\n        />\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useSubject } from '../lib/useSubject';\nimport { previewMode$, PreviewMode } from '../lib/PreviewModes';\nimport { CONTROL_SELECTED_BG, CONTROL_BG } from './Control';\n\nexport default function PanoExpand() {\n  const previewMode = useSubject(previewMode$);\n\n  const inSlices = previewMode === PreviewMode.Slices;\n\n  const onPress = () => {\n    switch (previewMode) {\n      case PreviewMode.Full:\n        previewMode$.next(PreviewMode.Slices);\n        break;\n      case PreviewMode.Slices:\n        previewMode$.next(PreviewMode.Full);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{\n        backgroundColor: inSlices ? CONTROL_SELECTED_BG : CONTROL_BG,\n        borderRadius: 10,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingVertical: 5,\n        paddingLeft: 9,\n        paddingRight: 11,\n      }}\n    >\n      <MaterialIcons name=\"zoom-out-map\" size={28} color=\"#fff\" />\n    </TouchableOpacity>\n  );\n}\n","/**\n * Hermite resize - fast image resize/resample using Hermite filter. 1 cpu version!\n * https://stackoverflow.com/a/18320662/4047926\n *\n * @param {HtmlElement} canvas\n * @param {int} width\n * @param {int} height\n * @param {boolean} resizeCanvas if true, canvas will be resized. Optional.\n */\nfunction resampleSingle(\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n  resizeCanvas: boolean = false\n): void {\n  const widthSource = canvas.width;\n  const heightSource = canvas.height;\n  width = Math.round(width);\n  height = Math.round(height);\n\n  const wRatio = widthSource / width;\n  const hRatio = heightSource / height;\n  const wRatioHalf = Math.ceil(wRatio / 2);\n  const hRatioHalf = Math.ceil(hRatio / 2);\n\n  const ctx = getContext(canvas);\n\n  const img = ctx.getImageData(0, 0, widthSource, heightSource);\n  const img2 = ctx.createImageData(width, height);\n  const data = img.data;\n  const data2 = img2.data;\n\n  for (let j = 0; j < height; j++) {\n    for (let i = 0; i < width; i++) {\n      const x2 = (i + j * width) * 4;\n      let weight = 0;\n      let weights = 0;\n      let weightsAlpha = 0;\n      let gx_r = 0;\n      let gx_g = 0;\n      let gx_b = 0;\n      let gx_a = 0;\n      const yCenter = (j + 0.5) * hRatio;\n      const yy_start = Math.floor(j * hRatio);\n      const yy_stop = Math.ceil((j + 1) * hRatio);\n      for (let yy = yy_start; yy < yy_stop; yy++) {\n        const dy = Math.abs(yCenter - (yy + 0.5)) / hRatioHalf;\n        const center_x = (i + 0.5) * wRatio;\n        const w0 = dy * dy; //pre-calc part of w\n        const xx_start = Math.floor(i * wRatio);\n        const xx_stop = Math.ceil((i + 1) * wRatio);\n        for (let xx = xx_start; xx < xx_stop; xx++) {\n          const dx = Math.abs(center_x - (xx + 0.5)) / wRatioHalf;\n          const w = Math.sqrt(w0 + dx * dx);\n          if (w >= 1) {\n            //pixel too far\n            continue;\n          }\n          //hermite filter\n          weight = 2 * w * w * w - 3 * w * w + 1;\n          const xPosition = 4 * (xx + yy * widthSource);\n          //alpha\n          gx_a += weight * data[xPosition + 3];\n          weightsAlpha += weight;\n          //colors\n          if (data[xPosition + 3] < 255) {\n            weight = (weight * data[xPosition + 3]) / 250;\n          }\n          gx_r += weight * data[xPosition];\n          gx_g += weight * data[xPosition + 1];\n          gx_b += weight * data[xPosition + 2];\n          weights += weight;\n        }\n      }\n      data2[x2] = gx_r / weights;\n      data2[x2 + 1] = gx_g / weights;\n      data2[x2 + 2] = gx_b / weights;\n      data2[x2 + 3] = gx_a / weightsAlpha;\n    }\n  }\n  //clear and resize canvas\n  if (resizeCanvas) {\n    canvas.width = width;\n    canvas.height = height;\n  } else {\n    ctx.clearRect(0, 0, widthSource, heightSource);\n  }\n\n  //draw\n  ctx.putImageData(img2, 0, 0);\n}\n\nfunction sizeFromAngle(\n  width: number,\n  height: number,\n  angle: number\n): { width: number; height: number } {\n  const radians = (angle * Math.PI) / 180;\n  let c = Math.cos(radians);\n  let s = Math.sin(radians);\n  if (s < 0) {\n    s = -s;\n  }\n  if (c < 0) {\n    c = -c;\n  }\n  return { width: height * s + width * c, height: height * c + width * s };\n}\n\nfunction cropImage(\n  canvas: HTMLCanvasElement,\n  image: HTMLImageElement,\n  x: number = 0,\n  y: number = 0,\n  width: number = 0,\n  height: number = 0\n): void {\n  const context = getContext(canvas);\n  context.save();\n  context.drawImage(image, x, y, width, height, 0, 0, width, height);\n}\n\nfunction drawImage(\n  canvas: HTMLCanvasElement,\n  img: HTMLImageElement,\n  x: number = 0,\n  y: number = 0,\n  angle: number = 0,\n  xFlip: boolean = false,\n  yFlip: boolean = false,\n  width?: number,\n  height?: number\n): CanvasRenderingContext2D {\n  const context = getContext(canvas);\n  context.save();\n\n  if (width == null) {\n    width = img.naturalWidth as number;\n  }\n  if (height == null) {\n    height = img.naturalHeight as number;\n  }\n\n  // Set the origin to the center of the image\n  context.translate(x + canvas.width / 2, y + canvas.height / 2);\n\n  // Rotate the canvas around the origin\n  const radians = 2 * Math.PI - (angle * Math.PI) / 180;\n  context.rotate(radians);\n\n  // Flip/flop the canvas\n  const xScale = xFlip ? -1 : 1;\n  const yScale = yFlip ? -1 : 1;\n\n  context.scale(xScale, yScale);\n\n  // Draw the image\n  context.drawImage(\n    img,\n    -img.naturalWidth / 2,\n    -img.naturalHeight / 2,\n    img.naturalWidth,\n    img.naturalHeight\n  );\n\n  context.restore();\n  return context;\n}\n\nfunction getContext(canvas: HTMLCanvasElement): CanvasRenderingContext2D {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    throw new Error('Failed to create canvas context');\n    // throw new CodedError('ERR_IMAGE_MANIPULATOR', 'Failed to create canvas context');\n  }\n  return ctx;\n}\n\nfunction getResults(\n  canvas: HTMLCanvasElement,\n  options?: SaveOptions\n): ImageResult {\n  let base64;\n  if (options) {\n    const { format = 'png' } = options;\n    if (options.format === 'png' && options.compress !== undefined) {\n      console.warn('compress is not supported with png format.');\n    }\n    const quality = Math.min(1, Math.max(0, options.compress || 1));\n    base64 = canvas.toDataURL('image/' + format, quality);\n  } else {\n    // defaults to PNG with no loss\n    base64 = canvas.toDataURL();\n  }\n  return {\n    uri: base64,\n    width: canvas.width,\n    height: canvas.height,\n    base64,\n  };\n}\n\nfunction loadImageAsync(uri: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const imageSource = new Image();\n    imageSource.onload = () => resolve(imageSource);\n    imageSource.onerror = () => reject(imageSource);\n    imageSource.src = uri;\n  });\n}\n\nasync function manipulateWithActionAsync(\n  uri: string,\n  action: Action,\n  options: SaveOptions\n): Promise<ImageResult> {\n  const canvas = document.createElement('canvas');\n  const imageSource = await loadImageAsync(uri);\n  canvas.width = imageSource.naturalWidth;\n  canvas.height = imageSource.naturalHeight;\n\n  if ((action as ActionCrop).crop) {\n    const { crop } = action as ActionCrop;\n    // ensure values are defined.\n    let { originX = 0, originY = 0, width = 0, height = 0 } = crop;\n    const clamp = (value: number, max: number) =>\n      Math.max(0, Math.min(max, value));\n    // lock within bounds.\n    width = clamp(width, canvas.width);\n    height = clamp(height, canvas.height);\n    originX = clamp(originX, canvas.width);\n    originY = clamp(originY, canvas.height);\n\n    // change size of canvas.\n    canvas.width = width;\n    canvas.height = height;\n\n    cropImage(canvas, imageSource, originX, originY, width, height);\n  } else if ((action as ActionResize).resize) {\n    const { resize } = action as ActionResize;\n    const { width, height } = resize;\n\n    const imageRatio = imageSource.naturalWidth / imageSource.naturalHeight;\n\n    let requestedWidth: number = 0;\n    let requestedHeight: number = 0;\n    if (width !== undefined) {\n      requestedWidth = width;\n      requestedHeight = requestedWidth / imageRatio;\n    }\n    if (height !== undefined) {\n      requestedHeight = height;\n      if (requestedWidth === 0) {\n        requestedWidth = requestedHeight * imageRatio;\n      }\n    }\n\n    const context = getContext(canvas);\n    context.save();\n    context.drawImage(\n      imageSource,\n      0,\n      0,\n      imageSource.naturalWidth,\n      imageSource.naturalHeight\n    );\n\n    resampleSingle(canvas, requestedWidth, requestedHeight, true);\n  } else if ((action as ActionFlip).flip !== undefined) {\n    const { flip } = action as ActionFlip;\n    const xFlip = flip === FlipType.Horizontal;\n    const yFlip = flip === FlipType.Vertical;\n    drawImage(canvas, imageSource, 0, 0, 0, xFlip, yFlip);\n  } else if ((action as ActionRotate).rotate !== undefined) {\n    const { rotate } = action as ActionRotate;\n    const { width, height } = sizeFromAngle(\n      imageSource.naturalWidth,\n      imageSource.naturalHeight,\n      rotate\n    );\n    canvas.width = width;\n    canvas.height = height;\n    drawImage(canvas, imageSource, 0, 0, rotate, false, false, width, height);\n  } else {\n    const context = getContext(canvas);\n    context.save();\n    context.drawImage(\n      imageSource,\n      0,\n      0,\n      imageSource.naturalWidth,\n      imageSource.naturalHeight\n    );\n  }\n  return getResults(canvas, options);\n}\n\nexport default {\n  // get name(): string {\n  //   return 'ExpoImageManipulator';\n  // },\n  async manipulateAsync(\n    uri: string,\n    actions: Action[] = [],\n    options: SaveOptions\n  ): Promise<ImageResult> {\n    if (!actions.length) {\n      const canvas = document.createElement('canvas');\n      const imageSource = await loadImageAsync(uri);\n      canvas.width = imageSource.naturalWidth;\n      canvas.height = imageSource.naturalHeight;\n      const ctx = getContext(canvas);\n      ctx.drawImage(\n        imageSource,\n        0,\n        0,\n        imageSource.naturalWidth,\n        imageSource.naturalHeight\n      );\n      return getResults(canvas, options);\n    } else {\n      let output: ImageResult;\n      for (let i = 0; i < actions.length; i++) {\n        const action = actions[i];\n        let _options;\n        if (i === actions.length - 1) {\n          _options = options;\n        }\n        output = await manipulateWithActionAsync(\n          uri || output!.uri,\n          action,\n          _options as SaveOptions\n        );\n      }\n      return output!;\n    }\n  },\n};\n\nexport type ImageResult = {\n  uri: string;\n  width: number;\n  height: number;\n  base64?: string;\n};\n\nexport type ActionResize = {\n  resize: {\n    width?: number;\n    height?: number;\n  };\n};\n\nexport type ActionRotate = {\n  rotate: number;\n};\n\nexport enum FlipType {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\nexport type ActionFlip = {\n  flip: FlipType;\n};\n\nexport type ActionCrop = {\n  crop: {\n    originX: number;\n    originY: number;\n    width: number;\n    height: number;\n  };\n};\n\nexport type Action = ActionResize | ActionRotate | ActionFlip | ActionCrop;\n\nexport enum SaveFormat {\n  JPEG = 'jpeg',\n  PNG = 'png',\n  // Chrome\n  WEBP = 'webp',\n}\n\nexport interface SaveOptions {\n  base64?: boolean;\n  compress?: number;\n  format?: SaveFormat;\n}\n","import React, { ReactNode, useState } from 'react';\nimport { Platform, Text, View, ViewStyle } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport ActionBarView from './ActionBarView';\nimport { useSubject } from '../lib/useSubject';\nimport { decrementSlices, incrementSlices } from '../lib/CropSettings';\nimport {\n  numberOfSlices$,\n  getRatio,\n  topOffset$,\n  bottomOffset$,\n  rightOffset$,\n  leftOffset$,\n} from '../lib/CropSettings';\nimport Control, { CONTROL_BG } from './Control';\nimport PanoBack from './PanoBack';\nimport PlusMinusControl from './PlusMinusControl';\nimport TrimControl from './TrimControl';\nimport PanoExpand from './PanoExpand';\nimport sliceImage from '../lib/SliceImage';\nimport { CONTROL_SELECTED_BG } from './Control';\nimport { selectedImage$ } from '../lib/SelectedImage';\n\nenum EditorState {\n  Slice,\n  Trim,\n}\n\nexport default function SliceBar() {\n  const [editorState, setEditorState] = useState(EditorState.Slice);\n  return (\n    <ActionBarView>\n      {(() => {\n        switch (editorState) {\n          case EditorState.Slice:\n            return <SlicesManipulator />;\n          case EditorState.Trim:\n            return <TrimControl />;\n        }\n      })()}\n      <NavBar>\n        {Platform.OS === 'web' ? <PanoBack /> : <PanoExpand />}\n        <View style={{ flexDirection: 'row' }} pointerEvents=\"box-none\">\n          <TrimToggle\n            disabled={editorState == EditorState.Trim}\n            onToggle={() => {\n              setEditorState(EditorState.Trim);\n            }}\n            controlStyle={{\n              borderTopRightRadius: 0,\n              borderBottomRightRadius: 0,\n              marginRight: 3,\n              backgroundColor:\n                editorState == EditorState.Trim\n                  ? CONTROL_SELECTED_BG\n                  : CONTROL_BG,\n            }}\n          />\n          <SliceToggle\n            disabled={editorState == EditorState.Slice}\n            onToggle={() => {\n              setEditorState(EditorState.Slice);\n            }}\n            controlStyle={{\n              borderTopLeftRadius: 0,\n              borderBottomLeftRadius: 0,\n              backgroundColor:\n                editorState == EditorState.Slice\n                  ? CONTROL_SELECTED_BG\n                  : CONTROL_BG,\n            }}\n          />\n        </View>\n        {Platform.OS === 'ios' ? <PanoBack /> : null}\n      </NavBar>\n    </ActionBarView>\n  );\n}\n\nfunction NextButton() {\n  const selectedImage = useSubject(selectedImage$);\n\n  const topOffset = useSubject(topOffset$);\n  const bottomOffset = useSubject(bottomOffset$);\n  const leftOffset = useSubject(leftOffset$);\n  const rightOffset = useSubject(rightOffset$);\n  const slices = useSubject(numberOfSlices$);\n  const ratio = getRatio(\n    selectedImage!,\n    slices,\n    topOffset,\n    bottomOffset,\n    leftOffset,\n    rightOffset\n  );\n\n  const invalidRatio = ratio > 1.91 || ratio < 0.8;\n\n  return (\n    <View style={{ alignItems: 'center', marginBottom: 35 }}>\n      <Control\n        touchableStyle={{\n          ...ToggleControlStyle,\n          paddingVertical: 10,\n          paddingHorizontal: 15,\n        }}\n        onPress={() => {\n          sliceImage();\n        }}\n      >\n        <MaterialIcons name=\"photo-camera\" size={20} color=\"#fff\" />\n        <Text\n          style={{\n            color: invalidRatio ? 'red' : 'yellow',\n            fontSize: 12,\n            fontWeight: '700',\n            marginLeft: 10,\n          }}\n        >\n          SAVE PHOTOS\n        </Text>\n      </Control>\n    </View>\n  );\n}\n\nconst SlicesManipulator = () => {\n  const slices = useSubject(numberOfSlices$);\n\n  return (\n    <View style={{ marginBottom: 40 }} pointerEvents=\"box-none\">\n      <NextButton />\n      <PlusMinusControl\n        currentValue={slices}\n        disableDecrement={slices <= 2}\n        onIncrement={incrementSlices}\n        onDecrement={decrementSlices}\n      />\n    </View>\n  );\n};\n\nconst NavBar = ({ children }: { children: ReactNode }) => {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        marginBottom: 20,\n      }}\n      pointerEvents=\"box-none\"\n    >\n      {children}\n    </View>\n  );\n};\n\ninterface IToggleProps {\n  onToggle: () => void;\n  controlStyle?: ViewStyle;\n  disabled?: boolean;\n}\n\nconst ToggleControlStyle: ViewStyle = {\n  flexDirection: 'row',\n  alignItems: 'center',\n  paddingVertical: 4,\n  paddingHorizontal: 10,\n};\n\nconst SliceToggle = ({ onToggle, controlStyle, disabled }: IToggleProps) => {\n  return (\n    <Control\n      touchableStyle={{ ...ToggleControlStyle, ...controlStyle }}\n      onPress={onToggle}\n      disabled={disabled}\n    >\n      <MaterialCommunityIcons\n        name=\"scissors-cutting\"\n        size={20}\n        color=\"#fff\"\n        style={{ transform: [{ rotate: '45deg' }, { translateY: -2 }] }}\n      />\n      <Text\n        style={{\n          fontSize: 12,\n          fontWeight: '700',\n          color: '#fff',\n          marginLeft: 8,\n        }}\n      >\n        SLICE\n      </Text>\n    </Control>\n  );\n};\n\nconst TrimToggle = ({ onToggle, controlStyle, disabled }: IToggleProps) => {\n  return (\n    <Control\n      touchableStyle={{ ...ToggleControlStyle, ...controlStyle }}\n      onPress={onToggle}\n      disabled={disabled}\n    >\n      <MaterialCommunityIcons name=\"aspect-ratio\" size={20} color=\"#fff\" />\n      <Text\n        style={{\n          fontSize: 12,\n          fontWeight: '700',\n          color: '#fff',\n          marginLeft: 8,\n        }}\n      >\n        CROP\n      </Text>\n    </Control>\n  );\n};\n","import { BehaviorSubject } from 'rxjs';\nimport { selectedImage$, IImageSource } from './SelectedImage';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as ImageCanvas from './ImageManipulator';\nimport { Alert, Platform } from 'react-native';\nimport * as MediaLibrary from 'expo-media-library';\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  numberOfSlices$,\n  topOffset$,\n  bottomOffset$,\n  leftOffset$,\n  rightOffset$,\n} from './CropSettings';\n\nclass ImageSlices {\n  image: IImageSource;\n  slices: number;\n  right: number;\n  top: number;\n  left: number;\n  bottom: number;\n  images = new BehaviorSubject<IImageSource[]>([]);\n  assets: MediaLibrary.Asset[] = [];\n\n  constructor(\n    image: IImageSource,\n    slices: number,\n    top: number,\n    bottom: number,\n    left: number,\n    right: number\n  ) {\n    this.image = image;\n    this.slices = slices;\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n  }\n}\n\nexport const slyce$ = new BehaviorSubject<ImageSlices | null>(null);\n\nexport function clearImage() {\n  slyce$.next(null);\n}\n\nexport default async function sliceImage() {\n  const selectedImage = selectedImage$.value;\n  const slices = numberOfSlices$.value;\n  const top = topOffset$.value;\n  const bottom = bottomOffset$.value;\n  const left = leftOffset$.value;\n  const right = rightOffset$.value;\n\n  if (!selectedImage) {\n    return;\n  }\n\n  const slyce = new ImageSlices(\n    selectedImage,\n    slices,\n    top,\n    bottom,\n    left,\n    right\n  );\n\n  slyce$.next(slyce);\n\n  const sliceCount = numberOfSlices$.value;\n\n  const topMargin = Math.round((top / 100) * selectedImage.height);\n  const bottomMargin = Math.round((bottom / 100) * selectedImage.height);\n  const adjustedHeight = selectedImage.height - topMargin - bottomMargin;\n\n  const leftMargin = Math.round((left / 100) * selectedImage.width);\n  const rightMargin = Math.round((right / 100) * selectedImage.width);\n  const adjustedWidth = selectedImage.width - leftMargin - rightMargin;\n\n  const sliceWidth = Math.floor(adjustedWidth / sliceCount);\n\n  const isWeb = Platform.OS === 'web';\n\n  const images: ImageManipulator.ImageResult[] = [];\n\n  try {\n    for (let i = 0; i < sliceCount; i++) {\n      const originX = leftMargin + sliceWidth * i;\n      const originY = topMargin;\n\n      const manipulateAsync = isWeb\n        ? ImageCanvas.default.manipulateAsync\n        : ImageManipulator.manipulateAsync;\n\n      const crop = await manipulateAsync(\n        selectedImage.uri,\n        [\n          {\n            crop: {\n              originX,\n              originY,\n              width: sliceWidth,\n              height: adjustedHeight,\n            },\n          },\n        ],\n        { compress: 1, format: ImageManipulator.SaveFormat.JPEG, base64: isWeb }\n      );\n\n      images.push(crop);\n    }\n    if (!isWeb) {\n      for (let i = 0; i < images.length; i++) {\n        const asset = await MediaLibrary.createAssetAsync(images[i].uri);\n        slyce.assets.push(asset);\n      }\n    }\n    slyce.images.next(images);\n  } catch (err) {\n    Alert.alert(err.message);\n  }\n}\n\nexport function downloadImage(dataurl: string, filename: string) {\n  var a = document.createElement('a');\n  a.href = dataurl;\n  a.setAttribute('download', filename);\n  a.click();\n  a.parentElement?.removeChild(a);\n}\n\nexport function useSlyceImages(slyce: ImageSlices | null) {\n  const [images, setImages] = useState<IImageSource[]>([]);\n  useEffect(() => {\n    if (slyce) {\n      const sub = slyce.images.subscribe((val) => {\n        setImages(val);\n      });\n\n      return () => {\n        sub.unsubscribe();\n      };\n    }\n  }, [slyce]);\n\n  return images;\n}\n\nexport function deleteImageSlices() {\n  const slyce = slyce$.value;\n\n  if (!slyce) {\n    return;\n  }\n\n  const assets = slyce.assets;\n\n  MediaLibrary.deleteAssetsAsync(assets).catch((err) => {});\n}\n","import React from 'react';\nimport { View, Text, useWindowDimensions } from 'react-native';\nimport {\n  numberOfSlices$,\n  getRatio,\n  topOffset$,\n  bottomOffset$,\n  rightOffset$,\n  leftOffset$,\n} from '../lib/CropSettings';\nimport { useSubject } from '../lib/useSubject';\nimport { selectedImage$ } from '../lib/SelectedImage';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { CONTROL_BG } from './Control';\n\nexport default function InfoBar() {\n  const window = useWindowDimensions();\n  const insets = useSafeAreaInsets();\n  const selectedImage = useSubject(selectedImage$);\n\n  const topOffset = useSubject(topOffset$);\n  const bottomOffset = useSubject(bottomOffset$);\n  const leftOffset = useSubject(leftOffset$);\n  const rightOffset = useSubject(rightOffset$);\n  const slices = useSubject(numberOfSlices$);\n  const ratio = getRatio(\n    selectedImage!,\n    slices,\n    topOffset,\n    bottomOffset,\n    leftOffset,\n    rightOffset\n  );\n\n  const invalidRatio = ratio > 1.91 || ratio < 0.8;\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        top: window.height * 0.04 + insets.top,\n        alignSelf: 'center',\n        alignItems: 'center',\n      }}\n      pointerEvents=\"none\"\n    >\n      {/* height and width box */}\n      <View style={{ flexDirection: 'row', marginBottom: 12 }}>\n        {/* width box */}\n        <View\n          style={{\n            backgroundColor: CONTROL_BG,\n            borderRadius: 10,\n            paddingHorizontal: 10,\n            paddingVertical: 8,\n            flexDirection: 'row',\n            marginRight: 6,\n          }}\n        >\n          <Text\n            style={{\n              fontSize: 12,\n              fontWeight: '700',\n              color: '#fff',\n            }}\n          >\n            W\n          </Text>\n          <Text\n            style={{\n              fontSize: 12,\n              fontWeight: '700',\n              color: 'yellow',\n              marginLeft: 10,\n            }}\n          >\n            {Math.round(\n              (selectedImage!.width -\n                ((leftOffset + rightOffset) / 100) * selectedImage!.width) /\n                slices\n            )}\n            px\n          </Text>\n        </View>\n        {/* height box */}\n        <View\n          style={{\n            backgroundColor: CONTROL_BG,\n            borderRadius: 10,\n            paddingHorizontal: 10,\n            paddingVertical: 8,\n            flexDirection: 'row',\n            marginLeft: 6,\n          }}\n        >\n          <Text\n            style={{\n              fontSize: 12,\n              fontWeight: '700',\n              color: '#fff',\n            }}\n          >\n            H\n          </Text>\n          <Text\n            style={{\n              fontSize: 12,\n              fontWeight: '700',\n              color: 'yellow',\n              marginLeft: 10,\n            }}\n          >\n            {Math.round(\n              selectedImage!.height -\n                ((topOffset + bottomOffset) / 100) * selectedImage!.height\n            )}\n            px\n          </Text>\n        </View>\n      </View>\n      {/* ratio box */}\n      <View\n        style={{\n          backgroundColor: CONTROL_BG,\n          borderRadius: 10,\n          paddingHorizontal: 10,\n          paddingVertical: 8,\n          flexDirection: 'row',\n        }}\n      >\n        <Text\n          style={{\n            fontSize: 12,\n            fontWeight: '700',\n            color: '#fff',\n          }}\n        >\n          RATIO\n        </Text>\n        <Text\n          style={{\n            fontSize: 12,\n            fontWeight: '700',\n            color: invalidRatio ? 'red' : 'yellow',\n            marginLeft: 10,\n          }}\n        >\n          {ratio.toFixed(2)} : 1\n        </Text>\n      </View>\n      {invalidRatio ? (\n        <Text\n          style={{\n            color: '#fff',\n            fontSize: 12,\n            fontWeight: '500',\n            marginTop: 13,\n            marginHorizontal: 20,\n            textAlign: 'center',\n          }}\n        >\n          Stay between 1.91 and 0.8 for social media\n        </Text>\n      ) : null}\n    </View>\n  );\n}\n","import React from 'react';\nimport { useWindowDimensions, View } from 'react-native';\nimport { numberOfSlices$ } from '../lib/CropSettings';\nimport { useSubject } from '../lib/useSubject';\nimport {\n  topOffset$,\n  bottomOffset$,\n  leftOffset$,\n  rightOffset$,\n} from '../lib/CropSettings';\nimport { selectedImage$ } from '../lib/SelectedImage';\n\nexport default function CropBox() {\n  const window = useWindowDimensions();\n  const selectedImage = useSubject(selectedImage$);\n\n  if (!selectedImage) {\n    return null;\n  }\n\n  const numberOfSlices = useSubject(numberOfSlices$);\n  const topOffset = useSubject(topOffset$);\n  const bottomOffset = useSubject(bottomOffset$);\n  const leftOffset = useSubject(leftOffset$);\n  const rightOffset = useSubject(rightOffset$);\n\n  const barCount = numberOfSlices - 1;\n  const bars: JSX.Element[] = [];\n  for (let i = 0; i < barCount; i++) {\n    bars.push(\n      <View\n        key={`bar${i}`}\n        style={{ backgroundColor: 'rgba(235, 176, 40, 0.8)', width: 1 }}\n      />\n    );\n  }\n\n  const widthRatio = window.width / selectedImage.width;\n  const correctedLeft = Math.round((leftOffset / 100) * window.width);\n  const correctedRight = Math.round((rightOffset / 100) * window.width);\n\n  const imageHeight = widthRatio * selectedImage.height;\n\n  const heightRatio = imageHeight / selectedImage.height;\n  const correctedTop = Math.round((topOffset / 100) * imageHeight);\n  const correctedBottom = Math.round((bottomOffset / 100) * imageHeight);\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        paddingTop: correctedTop,\n        paddingLeft: correctedLeft,\n        paddingRight: correctedRight,\n        paddingBottom: correctedBottom,\n      }}\n    >\n      {bars}\n      <View\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          borderTopWidth: correctedTop,\n          borderLeftWidth: correctedLeft,\n          borderRightWidth: correctedRight,\n          borderBottomWidth: correctedBottom,\n          borderColor: 'rgba(0,0,0,0.9)',\n        }}\n      />\n      <View\n        style={{\n          position: 'absolute',\n          top: correctedTop,\n          left: correctedLeft,\n          right: correctedRight,\n          bottom: correctedBottom,\n          borderWidth: 1,\n          borderTopColor: getBarColor(topOffset),\n          borderLeftColor: getBarColor(leftOffset),\n          borderRightColor: getBarColor(rightOffset),\n          borderBottomColor: getBarColor(bottomOffset),\n        }}\n      />\n    </View>\n  );\n}\n\nfunction getBarColor(offset: number): string {\n  return offset > 0 ? VISIBLE_BAR_COLOR : HIDDEN_BAR_COLOR;\n}\n\nconst VISIBLE_BAR_COLOR = 'rgba(255, 27, 150, 0.8)';\nconst HIDDEN_BAR_COLOR = 'rgba(255, 27, 150, 0)';\n","import React, { MutableRefObject, ReactNode } from 'react';\nimport { Animated, View, ViewStyle, ScaledSize } from 'react-native';\n\ninterface IImagePreviewDots {\n  offset: MutableRefObject<Animated.Value>;\n  slices: number;\n  window: ScaledSize;\n}\n\nexport default function ImagePreviewDots({\n  offset,\n  slices,\n  window,\n}: IImagePreviewDots) {\n  const dots: ReactNode[] = [];\n\n  for (let i = 0; i < slices; i++) {\n    dots.push(\n      <DotView\n        offset={offset}\n        slices={slices}\n        window={window}\n        index={i}\n        key={`${i}`}\n      />\n    );\n  }\n\n  return (\n    <View\n      pointerEvents=\"none\"\n      style={{\n        alignSelf: 'center',\n        flexDirection: 'row',\n        height: 2,\n        marginBottom: -10,\n        marginTop: 8,\n      }}\n    >\n      {dots}\n    </View>\n  );\n}\n\ninterface IImagePreviewDot extends IImagePreviewDots {\n  index: number;\n}\n\nfunction DotView({ offset, slices, index, window }: IImagePreviewDot) {\n  const translateX = offset.current.interpolate({\n    inputRange: [\n      (index - 1) * window.width,\n      index * window.width,\n      (index + 1) * window.width,\n    ],\n    outputRange: [-20, 0, 20],\n    extrapolate: 'clamp',\n  });\n\n  return (\n    <View\n      style={{\n        width: 20,\n        backgroundColor: '#888',\n        marginHorizontal: 4,\n        overflow: 'hidden',\n      }}\n    >\n      <Animated.View\n        style={{\n          flex: 1,\n          backgroundColor: '#fff',\n          transform: [{ translateX }],\n        }}\n      />\n    </View>\n  );\n}\n","import React, { useRef } from 'react';\nimport { View, Image, useWindowDimensions, Animated } from 'react-native';\nimport { selectedImage$ } from '../lib/SelectedImage';\nimport { useSubject } from '../lib/useSubject';\nimport { IImageEditorSharedElement } from './ImageEditor';\nimport {\n  topOffset$,\n  leftOffset$,\n  rightOffset$,\n  bottomOffset$,\n  numberOfSlices$,\n} from '../lib/CropSettings';\nimport SharedElement from 'react-navigation-shared-element/build/SharedElement';\nimport ImagePreviewDots from './ImagePreviewDots';\n\nexport default function ImagePreview({ id }: IImageEditorSharedElement) {\n  const scrollOffsetRef = useRef(new Animated.Value(0));\n\n  const window = useWindowDimensions();\n\n  const selectedImage = useSubject(selectedImage$);\n  const numberOfSlices = useSubject(numberOfSlices$);\n  const topOffset = useSubject(topOffset$);\n  const bottomOffset = useSubject(bottomOffset$);\n  const leftOffset = useSubject(leftOffset$);\n  const rightOffset = useSubject(rightOffset$);\n\n  if (!selectedImage) {\n    return null;\n  }\n\n  const leftPercent = leftOffset / 100;\n  const rightPercent = rightOffset / 100;\n  const percentWidth = 1 - (leftPercent + rightPercent);\n\n  const topPercent = topOffset / 100;\n  const bottomPercent = bottomOffset / 100;\n  const percentHeight = 1 - (topPercent + bottomPercent);\n\n  const croppedImageWidth = selectedImage.width * percentWidth;\n\n  const croppedImageHeight = selectedImage.height * percentHeight;\n\n  const segmentWidth = croppedImageWidth / numberOfSlices;\n\n  const scaledSegmentRatio = window.width / segmentWidth;\n\n  const scaledHeight = croppedImageHeight * scaledSegmentRatio;\n\n  const scaledWidth = segmentWidth * scaledSegmentRatio * numberOfSlices;\n\n  const scaledImageWidth = scaledWidth / percentWidth;\n\n  const scaledImageHeight = scaledHeight / percentHeight;\n\n  const top = scaledImageHeight * -topPercent;\n  const left = scaledImageWidth * -leftPercent;\n\n  // console.log({\n  //   top,\n  //   left,\n  //   leftPercent,\n  //   rightPercent,\n  //   percentWidth,\n  //   topPercent,\n  //   bottomPercent,\n  //   percentHeight,\n  //   croppedImageWidth,\n  //   croppedImageHeight,\n  //   segmentWidth,\n  //   scaledSegmentRatio,\n  //   scaledHeight,\n  //   scaledWidth,\n  //   scaledImageWidth,\n  //   scaledImageHeight,\n  // });\n\n  return (\n    <View\n      style={{ flex: 1, backgroundColor: '#000', justifyContent: 'center' }}\n    >\n      <View\n        style={{\n          height: scaledHeight,\n          width: window.width,\n        }}\n      >\n        <Animated.ScrollView\n          showsHorizontalScrollIndicator={false}\n          scrollEventThrottle={16}\n          onScroll={Animated.event(\n            [\n              {\n                nativeEvent: { contentOffset: { x: scrollOffsetRef.current } },\n              },\n            ],\n            { useNativeDriver: true }\n          )}\n          horizontal\n          pagingEnabled\n          style={{ flex: 1 }}\n        >\n          <View\n            style={{\n              flex: 1,\n              backgroundColor: '#333',\n              height: scaledHeight,\n              width: scaledWidth,\n              overflow: 'hidden',\n            }}\n          >\n            <SharedElement id={id}>\n              <Image\n                source={selectedImage}\n                style={{\n                  position: 'absolute',\n                  height: scaledImageHeight,\n                  width: scaledImageWidth,\n                  top,\n                  left,\n                }}\n              />\n            </SharedElement>\n          </View>\n        </Animated.ScrollView>\n      </View>\n      <ImagePreviewDots\n        offset={scrollOffsetRef}\n        window={window}\n        slices={numberOfSlices}\n      />\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Text, View, TouchableOpacity, ScrollView } from 'react-native';\nimport { slyce$, downloadImage, clearImage } from '../lib/SliceImage';\nimport { useSubject } from '../lib/useSubject';\nimport { IImageSource } from '../lib/SelectedImage';\nimport Control from './Control';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nexport default function SliceProgress() {\n  const [images, setImages] = useState<IImageSource[]>([]);\n\n  const slyce = useSubject(slyce$);\n\n  useEffect(() => {\n    if (slyce) {\n      const sub = slyce.images.subscribe((val) => {\n        setImages(val);\n      });\n\n      return () => {\n        sub.unsubscribe();\n      };\n    }\n  }, [slyce]);\n\n  if (!slyce) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <View style={{ alignItems: 'center', maxWidth: '100%' }}>\n        <Text\n          style={{\n            color: '#fff',\n            fontSize: 20,\n            fontWeight: '700',\n            marginBottom: 10,\n          }}\n        >\n          {!images.length ? 'Slycing' : 'Slyced'}\n        </Text>\n        <Text\n          style={{\n            color: '#fff',\n            fontSize: 16,\n            marginBottom: 20,\n            textAlign: 'center',\n            marginHorizontal: 25,\n            maxWidth: 500,\n            lineHeight: 22,\n          }}\n        >\n          {!images.length\n            ? 'Wait a few seconds... Apps do this much faster.'\n            : 'Click or tap to download each slyce.\\nMay take a few seconds for the download to start.'}\n        </Text>\n        <ScrollView\n          horizontal\n          style={{ height: 130, maxWidth: '100%' }}\n          centerContent\n        >\n          <View style={{ flexDirection: 'row', height: 130 }}>\n            {images.map((image, i) => {\n              return (\n                <TouchableOpacity\n                  key={`${i}`}\n                  style={{\n                    height: 130,\n                    width: (image.width * 150) / image.height,\n                    overflow: 'hidden',\n                    marginHorizontal: 5,\n                  }}\n                  onPress={() => {\n                    setTimeout(() => {\n                      downloadImage(\n                        (image as any).base64,\n                        `slyce-${i + 1}.jpg`\n                      );\n                    }, 500);\n                  }}\n                >\n                  <img\n                    style={{\n                      height: 130,\n                      width: (image.width * 150) / image.height,\n                      flex: '0 0 auto',\n                      cursor: 'pointer',\n                    }}\n                    src={(image as any).base64}\n                  />\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n        </ScrollView>\n      </View>\n      <DismissControl />\n    </View>\n  );\n}\n\nfunction DismissControl() {\n  return (\n    <Control\n      touchableStyle={{\n        position: 'absolute',\n        top: 20,\n        right: 20,\n        height: 44,\n        width: 44,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      onPress={() => {\n        clearImage();\n      }}\n    >\n      <MaterialCommunityIcons name=\"close\" size={24} color=\"#fff\" />\n    </Control>\n  );\n}\n","import React from 'react';\nimport {\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport { useSubject } from '../lib/useSubject';\nimport { selectedImage$ } from '../lib/SelectedImage';\nimport SharedElement from 'react-navigation-shared-element/build/SharedElement';\nimport { StackScreenProps } from '@react-navigation/stack';\nimport { RootStackParamList } from '../App';\nimport SliceBar from './SliceBar';\nimport InfoBar from './InfoBar';\nimport CropBox from './CropBox';\nimport { previewMode$, PreviewMode } from '../lib/PreviewModes';\nimport ImagePreview from './ImagePreview';\nimport SliceProgress from './SliceProgress';\n\nexport default function ImageEditor({\n  route,\n}: StackScreenProps<RootStackParamList, 'Editor - Slyce'>) {\n  const id = route.params.id;\n\n  return (\n    <View style={{ backgroundColor: '#000', flex: 1 }}>\n      <KeyboardAvoidingView\n        enabled={Platform.OS === 'ios'}\n        behavior=\"padding\"\n        style={{\n          flex: 1,\n        }}\n      >\n        <ImageView id={id} />\n      </KeyboardAvoidingView>\n      <SliceBar />\n      <InfoBar />\n      <SliceProgress />\n    </View>\n  );\n}\n\nexport interface IImageEditorSharedElement {\n  id: string;\n}\n\nfunction ImageView({ id }: IImageEditorSharedElement) {\n  const previewMode = useSubject(previewMode$);\n\n  let Component;\n\n  switch (previewMode) {\n    case PreviewMode.Full:\n      Component = <ImagePanView id={id} />;\n      break;\n    case PreviewMode.Slices:\n      Component = <ImagePreview id={id} />;\n      break;\n    default:\n      return null;\n  }\n\n  return Component;\n}\n\nfunction ImagePanView({ id }: IImageEditorSharedElement) {\n  const window = useWindowDimensions();\n  const selectedImage = useSubject(selectedImage$)!;\n  const imageHeight =\n    (selectedImage.height * window.width) / selectedImage.width;\n  return (\n    <ScrollView\n      style={{ flex: 1 }}\n      bouncesZoom\n      maximumZoomScale={4}\n      minimumZoomScale={1}\n      centerContent\n      alwaysBounceVertical\n      alwaysBounceHorizontal\n      contentContainerStyle={\n        Platform.OS === 'ios'\n          ? null\n          : {\n              minHeight: window.height,\n              justifyContent: 'center',\n              paddingBottom: '5%',\n            }\n      }\n    >\n      <View>\n        <SharedElement id={id}>\n          <Image\n            source={selectedImage}\n            style={{ height: imageHeight, width: window.width }}\n          />\n        </SharedElement>\n\n        <CropBox />\n      </View>\n    </ScrollView>\n  );\n}\n","import * as MediaLibrary from 'expo-media-library';\nimport * as Location from 'expo-location';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nexport async function getAddress(\n  coordinates: Promise<MediaLibrary.Location | undefined>\n): Promise<string> {\n  const coords = await coordinates;\n\n  if (!coords) {\n    return '';\n  }\n\n  let text = '';\n\n  try {\n    const key = `@address/${coords.latitude}${coords.longitude}`;\n\n    const value = await AsyncStorage.getItem(key);\n\n    if (value !== null && value.length) {\n      return value;\n    }\n\n    const placemarks = await Location.reverseGeocodeAsync(coords);\n\n    placemarks.find((placemark) => {\n      if (placemark.city && placemark.country) {\n        text = `${placemark.city}, ${placemark.country}`;\n        return true;\n      } else if (placemark.name) {\n        text = placemark.name;\n        return true;\n      }\n    });\n\n    await AsyncStorage.setItem(key, text);\n  } catch (error) {}\n\n  return text;\n}\n","import { BehaviorSubject } from 'rxjs';\nimport * as MediaLibrary from 'expo-media-library';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useEffect, useState } from 'react';\nimport { Alert, Platform } from 'react-native';\nimport { getAddress } from './Addresses';\n\ndayjs.extend(relativeTime);\n\nexport const album$ = new BehaviorSubject<MediaLibrary.Asset[]>([]);\n\ninterface AssetDate {\n  date: string;\n  from: string;\n}\n\ninterface AssetInfo {\n  updatedAt: AssetDate;\n  createdAt: AssetDate;\n  coordinates: Promise<MediaLibrary.Location | undefined>;\n  address: Promise<string>;\n}\n\nconst assetCache = new Map<string, AssetInfo>();\n\nconst dateFormat = 'ddd MMM D, YYYY [at] h:mma';\n\nfunction formatTime(epoch: number): AssetDate {\n  const time = dayjs(epoch);\n  const date = time.format(dateFormat);\n  const from = time.fromNow();\n  return {\n    date,\n    from,\n  };\n}\n\nexport function getAssetInfo(asset: MediaLibrary.Asset): AssetInfo {\n  let info = assetCache.get(asset.id);\n\n  if (info) {\n    return info;\n  }\n\n  const updatedAt = formatTime(asset.modificationTime);\n  const createdAt = formatTime(asset.creationTime);\n\n  const moreInfo = MediaLibrary.getAssetInfoAsync(asset);\n\n  const coordinates = moreInfo.then((info) => {\n    return info.location;\n  });\n\n  info = {\n    updatedAt,\n    createdAt,\n    coordinates,\n    address: getAddress(coordinates),\n  };\n\n  assetCache.set(asset.id, info);\n\n  return info;\n}\n\nexport function useAssetInfoAddress(info: AssetInfo) {\n  const [address, setAddress] = useState('');\n\n  useEffect(() => {\n    const getAddress = async () => {\n      const address = await info.address;\n      setAddress(address);\n    };\n\n    getAddress();\n  }, [info]);\n\n  return address;\n}\n\ninterface ILoadPanos {\n  total?: number;\n  after?: string | MediaLibrary.Asset;\n  album?: MediaLibrary.Album;\n}\n\nasync function loadPhotos({\n  total,\n  after,\n  album,\n}: ILoadPanos): Promise<MediaLibrary.PagedInfo<MediaLibrary.Asset>> {\n  return MediaLibrary.getAssetsAsync({\n    album,\n    sortBy:\n      Platform.OS === 'ios' ? MediaLibrary.SortBy.modificationTime : undefined,\n    first: total,\n    after,\n  });\n}\n\nfunction filterPanos(assets: MediaLibrary.Asset[]): MediaLibrary.Asset[] {\n  return assets.filter((asset) => asset.mediaSubtypes?.includes('panorama'));\n}\n\nasync function getLibraryPermissions() {\n  if (Platform.OS !== 'web') {\n    const { status } = await MediaLibrary.requestPermissionsAsync();\n    if (status !== 'granted') {\n      throw new Error('Permission Required');\n    }\n  }\n}\n\nasync function loadAllAssets() {\n  let panos: MediaLibrary.Asset[] = [];\n\n  let album;\n\n  if (Platform.OS === 'android') {\n    const albums = await MediaLibrary.getAlbumsAsync();\n\n    const album = albums.find((album) => album.title === 'Camera');\n\n    if (!album) {\n      return;\n    }\n  }\n\n  let currentRequest = await loadPhotos({ total: 20, album });\n\n  panos = panos.concat(filterPanos(currentRequest.assets));\n\n  while (currentRequest.hasNextPage) {\n    currentRequest = await loadPhotos({\n      total: 20,\n      after: currentRequest.endCursor,\n      album,\n    });\n\n    panos = panos.concat(filterPanos(currentRequest.assets));\n  }\n\n  album$.next(panos);\n}\n\nexport async function initializeAlbum() {\n  try {\n    await getLibraryPermissions();\n\n    await loadAllAssets();\n\n    MediaLibrary.addListener((event) => {\n      loadAllAssets().catch((err) => {\n        console.log(err.stack);\n      });\n    });\n  } catch (error) {\n    Alert.alert('Error', error.message);\n  }\n}\n","import { Image, ScaledSize, Text, TouchableOpacity, View } from 'react-native';\nimport React from 'react';\nimport * as MediaLibrary from 'expo-media-library';\nimport { getAssetInfo, useAssetInfoAddress } from '../lib/PanoAlbum';\nimport { selectImage } from '../lib/SelectedImage';\nimport SharedElement from 'react-navigation-shared-element/build/SharedElement';\nimport { useNavigation } from '@react-navigation/native';\nimport { resetCropSettings } from '../lib/CropSettings';\n\ninterface IPanoItem {\n  item: MediaLibrary.Asset;\n  index: number;\n  window: ScaledSize;\n}\n\nexport default function PanoItem({ item: asset, index, window }: IPanoItem) {\n  const navigation = useNavigation();\n  const height = PanoItem.getHeight(asset, window);\n  const info = getAssetInfo(asset);\n  const address = useAssetInfoAddress(info);\n  return (\n    <TouchableOpacity\n      style={{ height: height, overflow: 'hidden' }}\n      onPress={() => {\n        selectImage(asset);\n        resetCropSettings();\n        navigation.navigate('Editor - Slyce', { id: asset.id });\n      }}\n    >\n      <SharedElement id={asset.id}>\n        <Image\n          source={asset}\n          style={{\n            height: height - PanoItem.infoHeight,\n            width: window.width,\n            overflow: 'hidden',\n          }}\n        />\n      </SharedElement>\n      <View style={{ paddingHorizontal: 10, paddingTop: 10 }}>\n        <Text style={{ color: '#fff' }} numberOfLines={1}>\n          {address}\n        </Text>\n        <Text style={{ color: '#fff' }} numberOfLines={1}>\n          created {info.createdAt.from}\n        </Text>\n        <Text style={{ color: '#fff' }} numberOfLines={1}>\n          updated {info.updatedAt.from}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n\nPanoItem.infoHeight = 90;\n\nPanoItem.getHeight = function (\n  item: MediaLibrary.Asset,\n  window: ScaledSize\n): number {\n  return Math.ceil((item.height * window.width) / item.width) + this.infoHeight;\n};\n","import React from 'react';\nimport { View, Text, useWindowDimensions } from 'react-native';\nimport ShimmerPlaceholder from 'react-native-shimmer-placeholder';\n\nexport default function EmptyPanoView() {\n  return (\n    <View>\n      <PanoShimmer />\n      <PanoShimmer />\n      <PanoShimmer />\n    </View>\n  );\n}\n\nfunction PanoShimmer() {\n  const window = useWindowDimensions();\n  return (\n    <View>\n      <ShimmerPlaceholder\n        height={80}\n        width={window.width - 20}\n        style={{ marginLeft: 10 }}\n        shimmerColors={['#222', '#333', '#222']}\n      />\n      <ShimmerPlaceholder\n        height={20}\n        width={80}\n        shimmerColors={['#222', '#333', '#222']}\n        style={{ marginLeft: 10, marginTop: 20 }}\n      />\n\n      <ShimmerPlaceholder\n        height={15}\n        width={150}\n        shimmerColors={['#222', '#333', '#222']}\n        style={{ marginLeft: 10, marginTop: 5 }}\n      />\n\n      <ShimmerPlaceholder\n        height={15}\n        width={150}\n        shimmerColors={['#222', '#333', '#222']}\n        style={{ marginLeft: 10, marginTop: 5 }}\n      />\n      <Text>Austin, TX</Text>\n      <Text>Austin, TX</Text>\n      <Text>Austin, TX</Text>\n    </View>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { View, FlatList, useWindowDimensions, Text } from 'react-native';\nimport { useSubject } from '../lib/useSubject';\nimport { album$, initializeAlbum } from '../lib/PanoAlbum';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport PanoItem from './PanoItem';\nimport EmptyPanoView from './EmptyPanoView';\n\nexport default function PanoList() {\n  const insets = useSafeAreaInsets();\n  const window = useWindowDimensions();\n  const album = useSubject(album$);\n  useEffect(() => {\n    initializeAlbum();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, backgroundColor: '#000' }}>\n      <FlatList\n        ListEmptyComponent={EmptyPanoView}\n        ListHeaderComponent={() => (\n          <View\n            style={{\n              height: 80 + insets.top,\n              paddingHorizontal: 10,\n              paddingTop: insets.top,\n            }}\n          >\n            <Text style={{ fontSize: 30, color: '#fff', fontWeight: '700' }}>\n              Panoramas\n            </Text>\n            <Text style={{ fontSize: 14, color: '#ccc' }}>Tap to slyce</Text>\n          </View>\n        )}\n        contentInsetAdjustmentBehavior=\"never\"\n        style={{ flex: 1 }}\n        data={album}\n        renderItem={(data) => {\n          return <PanoItem window={window} {...data} />;\n        }}\n      />\n    </View>\n  );\n}\n","import { useNavigation } from '@react-navigation/native';\nimport React from 'react';\nimport { Image, Platform, Text, useWindowDimensions, View } from 'react-native';\nimport { openPicker, selectedImage$ } from '../lib/SelectedImage';\nimport Control from './Control';\nimport PanoList from './PanoList';\nimport { resetCropSettings } from '../lib/CropSettings';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as Linking from 'expo-linking';\n\nexport default function HomeScreen() {\n  if (Platform.OS === 'ios') {\n    return <PanoList />;\n  }\n\n  const window = useWindowDimensions();\n  const navigation = useNavigation();\n\n  return (\n    <View\n      style={{\n        backgroundColor: '#000',\n        height: '100%',\n        alignItems: 'center',\n      }}\n    >\n      <WebHeader />\n      <View style={{ flex: 1 }} />\n      <Image\n        source={require('../assets/splash.png')}\n        style={{ height: 180, width: 180, resizeMode: 'cover' }}\n      />\n      <Text\n        style={{\n          color: '#fff',\n          fontWeight: '500',\n          marginTop: -15,\n          marginBottom: 20,\n          marginHorizontal: 50,\n          fontSize: 17,\n          lineHeight: 27,\n          textAlign: 'center',\n          zIndex: 4,\n        }}\n      >\n        Select a panorama to split it into equal slyces\n      </Text>\n      <Control\n        onPress={async () => {\n          if (isiOSWeb()) {\n            alert(\n              'Heads up: On iPhones, switch the selected image size to large for panoramas.'\n            );\n          }\n\n          await openPicker();\n          if (selectedImage$.value) {\n            resetCropSettings();\n            navigation.navigate('Editor - Slyce', { id: '' });\n          }\n        }}\n        touchableStyle={{\n          paddingVertical: 12,\n          paddingHorizontal: 16,\n        }}\n      >\n        <Text style={{ color: '#fff', fontSize: 15, fontWeight: '700' }}>\n          SELECT PANORAMA\n        </Text>\n      </Control>\n\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'flex-end',\n          paddingTop: Platform.OS === 'web' ? window.height * 0.15 : 0,\n        }}\n      >\n        <WebFooter />\n      </View>\n    </View>\n  );\n}\n\nfunction WebFooter() {\n  if (Platform.OS !== 'web') {\n    return null;\n  }\n  return (\n    <View style={{ alignItems: 'center', paddingBottom: 40 }}>\n      <Text style={{ color: '#fff', marginBottom: 20, fontWeight: '500' }}>\n        Apps also available\n      </Text>\n      <View style={{ flexDirection: 'row', padding: 10, paddingTop: 0 }}>\n        <Control\n          touchableStyle={{\n            paddingHorizontal: 12,\n            paddingVertical: 8,\n            marginHorizontal: 5,\n          }}\n          onPress={() => {\n            Linking.openURL(\n              'https://apps.apple.com/us/app/slyce-panoramas/id1533345426'\n            );\n          }}\n        >\n          <Text style={{ color: '#fff', fontSize: 13, fontWeight: '700' }}>\n            iOS\n          </Text>\n        </Control>\n        <Control\n          touchableStyle={{\n            paddingHorizontal: 12,\n            paddingVertical: 8,\n            marginHorizontal: 5,\n          }}\n          onPress={() => {\n            Linking.openURL(\n              'https://play.google.com/store/apps/details?id=me.syousif.slyce'\n            );\n          }}\n        >\n          <Text style={{ color: '#fff', fontSize: 13, fontWeight: '700' }}>\n            ANDROID\n          </Text>\n        </Control>\n      </View>\n    </View>\n  );\n}\n\nfunction WebHeader() {\n  if (Platform.OS !== 'web') {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        width: '100%',\n        paddingTop: 10,\n        paddingRight: 10,\n      }}\n    >\n      <Control\n        touchableStyle={{\n          flexDirection: 'row',\n          paddingRight: 12,\n          paddingLeft: 6,\n          paddingVertical: 6,\n          alignItems: 'center',\n        }}\n        onPress={() => {\n          Linking.openURL('https://instagram.com/slyce.app');\n        }}\n      >\n        <MaterialCommunityIcons name=\"instagram\" size={20} color=\"#fff\" />\n        <Text\n          style={{\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: '700',\n            marginLeft: 12,\n          }}\n        >\n          @slyce.app\n        </Text>\n      </Control>\n      <Control\n        touchableStyle={{\n          flexDirection: 'row',\n          paddingRight: 12,\n          paddingLeft: 6,\n          paddingVertical: 6,\n          alignItems: 'center',\n        }}\n        onPress={() => {\n          Linking.openURL('https://instagram.com/slyce.app');\n        }}\n      >\n        {/* <MaterialCommunityIcons name=\"github-circle\" size={20} color=\"#fff\" /> */}\n        <MaterialCommunityIcons name=\"file-code\" size={20} color=\"#fff\" />\n        <Text\n          style={{\n            color: '#fff',\n            fontSize: 13,\n            fontWeight: '700',\n            marginLeft: 5,\n          }}\n        >\n          {'<github />'}\n        </Text>\n      </Control>\n    </View>\n  );\n}\n\nfunction isiOSWeb() {\n  return ['iPhone Simulator', 'iPod Simulator', 'iPhone', 'iPod'].includes(\n    navigator.platform\n  );\n}\n","import React from 'react';\n\nexport default function Updater() {\n  return null;\n}\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport ImageEditor from './components/ImageEditor';\nimport { enableScreens } from 'react-native-screens';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport createSharedElementStackNavigator from 'react-navigation-shared-element/build/createSharedElementStackNavigator';\nimport HomeScreen from './components/HomeScreen';\nimport ImagePreview from './components/ImagePreview';\nimport Updater from './components/Updater';\n\nenableScreens();\n\nexport type RootStackParamList = {\n  Slyce: undefined;\n  'Editor - Slyce': { id: string };\n};\n\nconst Stack = createSharedElementStackNavigator<RootStackParamList>();\nconst Modal = createSharedElementStackNavigator();\n\nfunction MainStack() {\n  return (\n    <Stack.Navigator headerMode=\"none\">\n      <Stack.Screen name=\"Slyce\" component={HomeScreen} />\n      <Stack.Screen\n        name=\"Editor - Slyce\"\n        component={ImageEditor}\n        sharedElements={(route, otherRoute, showing) => {\n          const { id } = route.params;\n          return [id];\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <View style={styles.container}>\n        <NavigationContainer>\n          <Modal.Navigator mode=\"modal\" headerMode=\"none\">\n            <Modal.Screen name=\"Main\" component={MainStack} />\n            <MainStack />\n            <Modal.Screen component={ImagePreview} name=\"Preview\" />\n          </Modal.Navigator>\n        </NavigationContainer>\n        <Updater />\n        <StatusBar style=\"light\" />\n      </View>\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/splash.149243aa.png\";"],"sourceRoot":""}